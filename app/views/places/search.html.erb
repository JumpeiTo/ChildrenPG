<div class="row">
  <div class="col-md-3">
    <h2>検索結果</h2>
    <%= form_with(url: places_search_path, method: :get, id: 'filter-search_form') do |f| %>
      <%= f.text_field :name, value: params[:name], placeholder: '遊び場名を入力してください' %>
      <%= f.label :types, 'カテゴリー' %>
      <%= f.select :types, options_for_select([['どこに遊びに？', nil], ['公園', 'park'], ['動物園', 'zoo'], ['観光名所', 'tourist_attraction'], ['遊園地', 'amusement_park'], ['水族館', 'aquarium'], ['美術館', 'art_gallery'], ['書店', 'book_store'], ['ボウリング場', 'bowling_alley'], ['カフェ', 'cafe'], ['キャンプ場', 'campground'], ['デパート', 'department_store'], ['図書館', 'library'], ['映画館', 'movie_theater'], ['博物館', 'museum'], ['ペットショップ', 'pet_store'], ['学校', 'school'], ['レストラン', 'restaurant'], ['ショッピングモール', 'shopping_mall'], ['スタジアム', 'stadium'], ['店舗', 'store']],selected: params[:types])  %>
      <p id="error-text">検索したい周辺の位置に<br>ピンをさしてください</p>
      <div class="d-flex">
        <label for="pin-coordinates-lat">緯度:</label>
        <div id="pin-coordinates-lat"></div> <!-- ピンの緯度を表示する要素 -->
      </div>
      <div class="d-flex">
        <label for="pin-coordinates-lng">経度:</label>
        <div id="pin-coordinates-lng"></div> <!-- ピンの経度を表示する要素 -->
      </div>
      <%= f.label :radius, '検索範囲:' %>
      <%= f.select :radius, options_for_select([['どこまで遠くに？', nil], ['1Km','1000'], ['5Km','5000'], ['10Km','10000'], ['30Km','30000']], selected: params[:radius]) %>
      <%= f.hidden_field :lat, value: params[:lat], id: 'lat' %>
      <%= f.hidden_field :lng, value: params[:lng], id: 'lng' %>
      
      <%= f.submit '検索', id: "submit_button" %>
      <%= button_tag '条件リセット', type: 'button', id: "condition_reset_button" %>
    <% end %>
    <input id="address" type="textbox" placeholder="場所を入力してください" >
    <input type="button" value="探す" onclick="codeAddress()">
    <div id="map"></div>
    
    <style>
      #map {
        height: 250px;
        width: 250px;
      }
    </style>
    
    <script>
      let map;
      let marker;
      let geocoder;
      // 三項演算子でlat!==""でtrueなら左falseなら右の値を変数に入れる
      let lat = getParam("lat") !== "" ? Number(getParam("lat")) : 35.155396 
      let lng = getParam("lng") !== "" ? Number(getParam("lng")) : 136.918969
      
      /*条件リセット*/
      document.getElementById('condition_reset_button').addEventListener('click', function() {
        document.getElementById('name').value = ""; // 名前フィールドの値を空にする
        let typesSelect = document.getElementById("types");
        typesSelect.selectedIndex = 0; // カテゴリーセレクトボックスを初期値に戻す
        let radiusSelect = document.getElementById("radius");
        radiusSelect.selectedIndex = 0; // 検索範囲セレクトボックスを初期値に戻す
        document.getElementById("pin-coordinates-lat").textContent = ""; // ピンの緯度を空にする
        document.getElementById("pin-coordinates-lng").textContent = ""; // ピンの経度を空にする
        if (marker) {
          marker.setMap(null); // ピンを地図上から削除する
        }
      });
      
      // javascriptでパラメーターを受取るための記述
      function getParam(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
      }
      
      function initMap() {
        geocoder = new google.maps.Geocoder();
        // 緯度経度を表示させる
        function displayPinCoordinates(lat, lng) {
          document.getElementById("pin-coordinates-lat").textContent = lat;
          document.getElementById("pin-coordinates-lng").textContent = lng;
        }
        // params[:lat]の値が存在する場合の処理
        if (lat !== 35.155396) {
          console.log('params[:lat]の値が存在します');
          displayPinCoordinates(lat,lng)
        }
        map = new google.maps.Map(document.getElementById("map"), {
          center: { lat: lat, lng: lng },
          zoom: 10,
        });
        // デフォルトのピンを設定
        marker = new google.maps.Marker({
          position: { lat: lat, lng: lng },
          map: map,
          draggable: true
        });
        google.maps.event.addListener(map, "click", function(event) {
          //マーカーが複数できないようにする
          if (marker) {
            marker.setMap(null); 
          }
          marker = new google.maps.Marker({
            position: event.latLng,
            map: map,
            draggable: true,
          });
          document.getElementById("lat").value = event.latLng.lat();
          document.getElementById("lng").value = event.latLng.lng();
          displayPinCoordinates(event.latLng.lat(), event.latLng.lng()); // ピンの緯度経度を表示
          google.maps.event.addListener(marker, "dragend", function(event) {
            document.getElementById("lat").value = this.getPosition().lat();
            document.getElementById("lng").value = this.getPosition().lng();
            displayPinCoordinates(this.getPosition().lat(), this.getPosition().lng()); // ピンの緯度経度を表示
          });
        });
      }
      // 場所検索時の挙動
      function codeAddress() {
        let inputAddress = document.getElementById("address").value;
        geocoder.geocode({ address: inputAddress }, function(results, status) {
          if (status == "OK") {
            if (marker) {
              marker.setMap(null);
            }
            map.setCenter(results[0].geometry.location);
            marker = new google.maps.Marker({
              position: results[0].geometry.location,
              map: map,
              draggable: true,
            });
            document.getElementById("lat").value = results[0].geometry.location.lat();
            document.getElementById("lng").value = results[0].geometry.location.lng();
            displayPinCoordinates(results[0].geometry.location.lat(), results[0].geometry.location.lng()); // ピンの緯度経度を表示
            google.maps.event.addListener(marker, "dragend", function(event) {
              document.getElementById("lat").value = this.getPosition().lat();
              document.getElementById("lng").value = this.getPosition().lng();
              displayPinCoordinates(this.getPosition().lat(), this.getPosition().lng()); // ピンの緯度経度を表示
            });
          } else {}
        });
      }
      
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_API_KEY'] %>&callback=initMap" async defer></script>
  </div>
  <!--検索リザルト結果-->
  <div class="col-md-9">
    <%= render partial: 'search_results', locals: { places: @places } %>
  </div>
</div>
